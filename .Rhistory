select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.),
future = make_future_dataframe(model, 2),
results = predict(model, future))
state_forcast <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.),
future = make_future_dataframe(.$model, 2),
results = predict(model, future))
state_forcast <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.),
future = make_future_dataframe(.$model, 2),
results = predict(model, future))
state_forcast <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.),
future = make_future_dataframe(model, 2),
results = predict(model, future))
state_forcast <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
summarise(model = prophet(.),
future = make_future_dataframe(model, 2),
results = predict(model, future))
state_forcast <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.),
future = make_future_dataframe(model, 2),
results = predict(model, future))
state_forcast <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.),
future = make_future_dataframe(model, 2))
state_forcast
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.),
future = make_future_dataframe(model, 2))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.)) %>%
do(future = make_future_dataframe(model, period = 3))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.))
state_forecast <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.))
state_forecast
state_forecast %>%
do(future = make_future_dataframe(model, periods = 3))
state_forecast %>%
do(future = make_future_dataframe(.$model, periods = 3))
state_forecast %>%
do(future = make_future_dataframe(.$model, periods = 3))
state_forcast
state_forecast
state_forecast
state_forecast %>%
do(future = make_future_dataframe(.$model, periods = 3))
state_forecast
state_forecast
state_forecast %>%
do(future = make_future_dataframe(.$model, periods = 3)) %>%
cbind(state_forecast %>% select(model))
state_forecast
state_forecast %>%
do(future = make_future_dataframe(.$model, periods = 3)) %>%
cbind(state_forecast %>% select(model)) %>%
cbind(state_forecast %>% select(state))
state_forecast %>%
do(future = make_future_dataframe(.$model, periods = 3)) %>%
cbind(state_forecast %>% select(model)) %>%
cbind(state_forecast %>% select(state)) %>%
unnest(future)
state_forecast %>%
do(future = make_future_dataframe(.$model, periods = 3))
state_forecast %>%
do(future = make_future_dataframe(.$model, periods = 3)) %>%
cbind(state_forecast %>% select(model)) %>%
cbind(state_forecast %>% select(state))
state_forecast %>%
do(future = make_future_dataframe(.$model, periods = 3)) %>%
cbind(state_forecast %>% select(model)) %>%
cbind(state_forecast %>% select(state)) %>%
do(results = predict(model, future))
state_forecast %>%
do(future = make_future_dataframe(.$model, periods = 3)) %>%
cbind(state_forecast %>% select(model)) %>%
cbind(state_forecast %>% select(state)) %>%
do(results = predict(.$model, future))
state_forecast %>%
do(future = make_future_dataframe(.$model, periods = 3)) %>%
cbind(state_forecast %>% select(model)) %>%
cbind(state_forecast %>% select(state)) %>%
do(results = predict(.$model, future))
state_forecast %>%
do(future = make_future_dataframe(.$model, periods = 3)) %>%
cbind(state_forecast %>% select(model)) %>%
cbind(state_forecast %>% select(state))
state_forecast <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state)
state_forcast
state_forecast
state_forecast %>%
do(results = prophet(.))))
state_forecast %>%
do(results = prophet(.)))
state_forecast %>%
do(results = prophet(.))
state_forecast %>%
do(results = prophet(.))
state_forecast %>%
do(results = prophet(.),
future = make_future_dataframe(results , 2))
state_forecast %>%
do(model = prophet(.),
future = make_future_dataframe(model , 2))
future = make_future_dataframe(model , 2, .)
future = make_future_dataframe(model , 2)
state_forecast %>%
do(model = prophet(.),
future = make_future_dataframe(model , 2))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
brewing_materials <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-31/brewing_materials.csv')
beer_taxed <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-31/beer_taxed.csv')
brewer_size <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-31/brewer_size.csv')
beer_states <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-31/beer_states.csv')
library(prophet)
state_forcast <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.),
future = make_future_dataframe(model, 2),
results = predict(model, future))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state)
state_forcast <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.),
future = make_future_dataframe(model, 2),
results = predict(model, future))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state)
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
nest()
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
nest() %>%
mutate(model = map_dbl(data, prophet))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
nest() %>%
mutate(model = map_dbl(data, prophet))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
nest()
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
nest() %>%
unnest(data)
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
nest()
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
nest() %>%
do(model = prophet(data))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state)
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
summarise(model = prophet(.))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(model = prophet(.),
future = make_future_dataframe(model, 3))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state) %>%
do(m = prophet(.),
future = make_future_dataframe(m, 3))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
group_by(state)
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
nest(state)
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
nest(-state)
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
nest(-state) %>%
mutate(model = map_dbl(data, ~data %>% unnest() %>% prophet(.x)))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date())
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
split(state)
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
split(.$state)
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
split(.$state) %>%
map(~prophet(data = .))
results <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
split(.$state) %>%
map(~prophet(data = .))
results
results <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
split(.$state) %>%
map_dbl(~prophet(data = .))
results <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
nest(-state) %>%
map_dbl(~prophet(data = .))
results <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
nest(-state)
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
nest(-state)
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
nest(-state) %>%
mutate(model = sapply(data, prophet))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
nest(-state) %>%
mutate(model = lapply(data, prophet))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
nest(-state) %>%
mutate(model = lapply(data, prophet),
future = make_future_dataframe(model, 2))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
drop_na() %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date()) %>%
nest(-state) %>%
mutate(model = lapply(data, prophet)) %>%
mutate(future = make_future_dataframe(model, 2))
beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date())
state_data <- beer_states %>%
filter(type == "Bottles and Cans") %>%
select(state, ds = year, y = barrels) %>%
mutate(ds = paste(ds, "01", "01", sep = "-") %>% as.Date())
state_data
model_func <- function(data, state_name){
data <- data %>% filter(state == state_name) %>% select(-state)
model <- prophet(data)
future <- make_future_dataframe(model, 2)
results <- predict(model, future) %>% select(ds, yhat, yhat_upper, yhat_lower)
return(reslts %>% nest())
}
state_data
state_data %>% select(state) %>% duplicate()
state_data %>% select(state) %>% distinct()
state_list <- state_data %>% select(state) %>% distinct()
model_func <- function(state_name){
data <- state_data %>% filter(state == state_name) %>% select(-state)
model <- prophet(data)
future <- make_future_dataframe(model, 2)
results <- predict(model, future) %>% select(ds, yhat, yhat_upper, yhat_lower)
return(reslts %>% nest())
}
state_list <- state_data %>% select(state) %>% distinct()
state_list <- state_data %>% select(state) %>% distinct() %>% as.list()
results <- lapply(state_list, model_func)
model_func <- function(state_name){
data <- state_data %>% filter(state == state_name) %>% select(-state)
model <- prophet(data)
future <- make_future_dataframe(model, 2)
results <- predict(model, future) %>% select(ds, yhat, yhat_upper, yhat_lower)
return(results %>% nest())
}
state_list <- state_data %>% select(state) %>% distinct() %>% as.list()
results <- lapply(state_list, model_func)
results
results %>% unnest()
results %>% unlist()
state_list
model_func("AK")
model_func("AK") %>% unnest()
model_func <- function(state_name){
data <- state_data %>% filter(state == state_name) %>% select(-state)
model <- prophet(data)
future <- make_future_dataframe(model, 2)
results <- predict(model, future) %>% select(ds, yhat, yhat_upper, yhat_lower) %>% mutate(name = state_name)
return(results %>% nest())
}
sapply(state_list, model_func)
model_func("IA")
model_func("IA") %>%
unlist()
model_func("IA")
model_func <- function(state_name){
data <- state_data %>% filter(state == state_name) %>% select(-state)
model <- prophet(data)
future <- make_future_dataframe(model, 2)
results <- predict(model, future) %>% select(ds, yhat, yhat_upper, yhat_lower) %>% mutate(name = state_name)
return(results)
}
model_func("IA")
lapply(state_list, model_func)
sapply(state_list, model_func)
state_list
state_list <- state_data %>% select(state) %>% distinct()
state_list
state_list %>%
mutate(results = map_dbl(state, model_func))
state_list %>%
mutate(results = map(state, model_func))
results <- state_list %>%
mutate(results = map(state, model_func))
results
results %>% unnest()
model_func <- function(state_name){
data <- state_data %>% filter(state == state_name) %>% select(-state)
model <- prophet(data)
future <- make_future_dataframe(model, 2)
results <- predict(model, future) %>% select(ds, yhat, yhat_upper, yhat_lower)
return(results)
}
results <- state_list %>%
mutate(results = map(state, model_func))
results %>% unnest()
results %>%
unnest() %>%
select(state, ds, yhat, yhat_upper, yhat_lower) %>%
mutate(ds = ds -2000) %>%
ggplot(aes(x = ds, y= yhat, color = state)) +
geom_ribbon(aes(ymax = yhat_upper, ymin = yhat_lower, fill = state), alpha = .1)  +
geom_line(color = "black") +
facet_geo(~state, grid = "us_state_grid2", scales = "free") +
theme(legend.position = "none") +
labs(title = "Forcasted Bottles and Cans Production",
subtitle = "Microlevel forecasting using Prophet")
library(geofacet)
results %>%
unnest() %>%
select(state, ds, yhat, yhat_upper, yhat_lower) %>%
mutate(ds = ds -2000) %>%
ggplot(aes(x = ds, y= yhat, color = state)) +
geom_ribbon(aes(ymax = yhat_upper, ymin = yhat_lower, fill = state), alpha = .1)  +
geom_line(color = "black") +
facet_geo(~state, grid = "us_state_grid2", scales = "free") +
theme(legend.position = "none") +
labs(title = "Forcasted Bottles and Cans Production",
subtitle = "Microlevel forecasting using Prophet")
