df %>% mutate(row_num = row_number())
df %>% mutate(row_num = row_number()) %>% gather(-row_num) %>% filter(value %>% is.na())
df %>% mutate(row_num = row_number()) %>% gather(-row_num)
df %>% mutate(row_num = row_number()) %>%
df %>% mutate(row_num = row_number())
library(tidyverse)
df %>% mutate(row_num = row_number())
df %>% mutate(row_num = row_number()) %>% gather(-row_num)
df %>% mutate(row_num = row_number()) %>% gather(-"row_num")
df %>% mutate(row_num = row_number())
df %>% mutate(row_num = row_number()) %>% gather()
df %>% mutate(row_num = row_number()) %>% gather(-row_num)
row_num
df %>% mutate(row_num = row_number()) %>% gather(-row_num)
df %>% mutate(row_num = row_number()) %>% gather(-"row_num")
df %>% mutate(row_num = row_number())
df %>% mutate(row_num = row_number()) %>% gather(-row_num)
df %>% mutate(row_num = row_number())
df %>% mutate(row_key = row_number())
df %>% mutate(row_key = row_number()) %>% gather(-row_key)
df %>% mutate(row_key = row_number()) %>% gather(key = "key", value = "value", -row_key)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
df <- read.csv("titanic.csv")
df %>% summary()
?rowwise
df
df %>% mutate(row_key = row_number())
df %>% mutate(row_key = row_number()) %>% gather(key = "key", value = "value", -row_key)
df %>%
mutate(row_key = row_number()) %>%
gather(key = "key", value = "value", -row_key) %>%
filter(value %>% is.na())
df %>%
mutate(row_key = row_number()) %>%
gather(key = "key", value = "value", -row_key) %>%
filter(value %>% is.na()) %>%
count(row_key)
df %>%
mutate(row_key = row_number()) %>%
gather(key = "key", value = "value", -row_key) %>%
filter(value %>% is.na()) %>%
count(row_key, sort = TRUE)
df %>% summary()
df %>% group_by(Pclass) %>%
summarise(count = n(),
avg_age = mean(Age, na.rm = TRUE),
avg_fare = mean(Fare, na.rm = TRUE))
df %>%
filter(Pclass %>% is.na())
#But first we need to clean
df
#But first we need to clean
df %>%
select(-Name)
#But first we need to clean
df %>%
select(-Name) %>%
mutate(Sex = as.factor(Sex),
Survived = as.factor(Survived))
#But first we need to clean
df %>%
select(-Name) %>%
mutate(Sex = as.factor(Sex),
Survived = as.factor(Survived),
Pclass = as.factor(Pclass))
#But first we need to clean
df <- df %>%
select(-Name) %>%
mutate(Sex = as.factor(Sex),
Survived = as.factor(Survived),
Pclass = as.factor(Pclass))
df
titanic_rec <- recipe(Survived ~., data = df)
titanic_rec
titanic_rec %>%
step_knnimpute(Pclass)
titanic_rec <- titanic_rec %>%
step_knnimpute(Pclass)
df %>% summary()
df %>% count(Sex)
df %>% group_by(Sex) %>%
summarise(avg_age = mean(Age),
avg_fare = mean(Fare))
df %>% group_by(Sex) %>%
summarise(avg_age = mean(Age, na.rm = TRUE),
avg_fare = mean(Fare, na.rm = TRUE))
df %>% filter(Sex %>% is.na())
df %>% group_by(Sex) %>%
summarise(avg_age = mean(Age, na.rm = TRUE),
avg_fare = mean(Fare, na.rm = TRUE))
df %>% filter(Sex %>% is.na())
titanic_rec %>%
step_modeimpute(Sex)
titanic_rec <- titanic_rec %>%
step_modeimpute(Sex)
df %>% summary()
df %>%
ggplot(aes(Age)) + geom_density()
titanic_rec <- titanic_rec %>%
step_medianimpute(Age)
df %>%
select(Siblings.Spouses.Aboard, Parents.Children.Aboard)
df %>%
select(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>% gather()
df %>%
select(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>% gather() %>% ggplot(aes(x = value, color = key)) + geom_histogram() + facet_wrap(~key, scales = "free")
df %>%
select(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
summary()
df %>%
select(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
gather() %>%
ggplot(aes(x = value, color = key)) +
geom_histogram() +
facet_wrap(~key, scales = "free")
#Since you cannot have a half a parent or sibling aboard lets impute with mode
titanic_rec %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard)
#Since you cannot have a half a parent or sibling aboard lets impute with mode
titanic_rec <- titanic_rec %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard)
df %>% ggplot(aes(x = Fare)) + geom_density()
df %>% ggplot(aes(x = Fare)) + geom_density() + scale_x_log10()
df %>% ggplot(aes(x = Fare, fill = Pclass)) + geom_density() + scale_x_log10()
df %>% ggplot(aes(x = Fare, color = Pclass)) + geom_density() + scale_x_log10()
df %>% ggplot(aes(x = Fare)) + geom_density() + scale_x_log10()
df %>% select(Fare) %>% summary()
df %>% group_by(Pclass) %>%
summarise(count = n(),
min_fare = min(Fare, na.rm = TRUE),
avg_age = mean(Age, na.rm = TRUE),
avg_fare = mean(Fare, na.rm = TRUE))
df %>% group_by(Pclass) %>%
filter(Fare != 0) %>%
summarise(count = n(),
min_fare = min(Fare, na.rm = TRUE),
avg_age = mean(Age, na.rm = TRUE),
avg_fare = mean(Fare, na.rm = TRUE))
df
df %>% filter(Fare %>% is.na())
df %>% select(Fare) %>% summary()
titanic_rec %>%
step_meanimpute(Fare)
titanic_rec <- titanic_rec %>%
step_meanimpute(Fare)
df %>% summary()
df %>% select_if(!is.facotr)
df %>% select_if(!is.factor)
df %>% select_if(is.factor)
df %>% select_if(vars(is.factor))
df %>% select_at(vars(is.factor))
df %>% select_at(!vars(is.factor))
df %>% select_at(is.factor)
df %>% select_if(is.factor)
df %>% select_if(!is.factor)
df
df %>% select(-Survived, -Pclass, -Sex)
df %>% select(-Survived, -Pclass, -Sex) %>% gather()
df %>% select(-Survived, -Pclass, -Sex) %>% gather() %>%
ggplot(aes(x = value, fill = key)) + geom_histogram() + facet_wrap(~key, scales = "free")
df %>% select_if(negate(is.factor)) %>% gather() %>%
ggplot(aes(x = value, fill = key)) + geom_histogram() + facet_wrap(~key, scales = "free")
df %>% select_if(negate(is.factor)) %>% gather() %>%
ggplot(aes(x = value, fill = key)) + geom_histogram() + facet_wrap(~key, scales = "free") + scale_x_log10()
df %>% select_if(negate(is.factor)) %>% gather() %>%
ggplot(aes(x = value, fill = key)) + geom_histogram() + facet_wrap(~key, scales = "free")
#Finished imputing now lets put in some dummyvars
df
#Finished imputing now lets put in some dummyvars
titanic_rec %>%
step_dummy(Pclass, Sex)
#Finished imputing now lets put in some dummyvars
titanic_rec <- titanic_rec %>%
step_dummy(Pclass, Sex)
titanic_rec %>%
step_normalize(all_numeric)
titanic_rec <- titanic_rec %>%
step_normalize(all_numeric)
titanic_prep <- prep(titanic_rec)
titanic_rec
titanic_prep <- prep(titanic_rec)
titanic_prep <- prep(titanic_rec, training = df)
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep()
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep()
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep()
df %>% str()
df %>% mutate(Survived = as.character(Survived))
recipe(Survived ~., data = df %>% mutate(Survived = as.character(Survived))) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep()
?prep
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep(strings_as_factors = FALSE)
recipe(Survived ~., data = df) %>%
prep(strings_as_factors = FALSE)
recipe(Survived ~ . , data = df) %>%
prep(strings_as_factors = FALSE)
recipe(Survived ~ . , data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
prep(strings_as_factors = FALSE)
df %>% fct_drop()
df
df %>% fct_drop(c("Survived", "Pclass", "Sex"))
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep(strings_as_factors = FALSE)
df %>% levels()
df$Survived %>% levels
df$Sex %>% levels
df$Pclass %>% levels
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep(strings_as_factors = FALSE)
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
#step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep(strings_as_factors = FALSE)
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
#step_medianimpute(Age) %>%
#step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep(strings_as_factors = FALSE)
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
#step_medianimpute(Age) %>%
#step_modeimpute(Sex) %>%
#step_knnimpute(Pclass) %>%
prep(strings_as_factors = FALSE)
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
#step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
#step_medianimpute(Age) %>%
#step_modeimpute(Sex) %>%
#step_knnimpute(Pclass) %>%
prep(strings_as_factors = FALSE)
df
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_modeimpute(Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep(strings_as_factors = FALSE)
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_modeimpute(Siblings.Spouses.Aboard) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep(strings_as_factors = FALSE)
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep(strings_as_factors = FALSE)
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
step_meanimpute(Fare) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
prep(strings_as_factors = FALSE)
df
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_meanimpute(Fare) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
step_dummy(Pclass, Sex) %>%
prep(strings_as_factors = FALSE)
recipe(Survived ~., data = df) %>%
step_normalize(all_numeric()) %>%
step_meanimpute(Fare) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
step_dummy(Pclass, Sex) %>%
prep(strings_as_factors = FALSE) %>%
bake(df)
recipe(Survived ~., data = df) %>%
step_meanimpute(Fare) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex, Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
step_knnimpute(Pclass) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
prep(strings_as_factors = FALSE)
recipe(Survived ~., data = df) %>%
step_meanimpute(Fare) %>%
step_medianimpute(Age) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
prep(strings_as_factors = FALSE)
titanic_rec
recipe(Survived ~., data = df) %>%
step_meanimpute(Fare) %>%
step_medianimpute(Age, Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
prep(strings_as_factors = FALSE)
titanic_prep <- recipe(Survived ~., data = df) %>%
step_meanimpute(Fare) %>%
step_medianimpute(Age, Siblings.Spouses.Aboard, Parents.Children.Aboard) %>%
step_modeimpute(Sex) %>%
step_knnimpute(Pclass) %>%
step_normalize(all_numeric()) %>%
step_dummy(Pclass, Sex) %>%
prep(strings_as_factors = FALSE)
bake(titanic_prep, df)
bake(titanic_prep, df) %>% summary()
processed_df <- bake(titanic_prep, df)
processed_df
processed_df %>% drop_na()
processed_df <- processed_df %>% drop_na()
processed_df
knitr::opts_chunk$set(echo = TRUE)
library(tidymodels)
library(tidyverse)
library(AmesHousing)
options(scipen = 999)
ames_data <- make_ames()
ames_data %>% glimpse()
ames_data %>%
select(Sale_Price) %>%
ggplot(aes(Sale_Price)) + geom_histogram()
ames_data %>%
select(Sale_Price, Year_Built, Central_Air) %>%
ggplot(aes(x = Year_Built, y = Sale_Price, color = Central_Air)) +
geom_point(alpha = .1) +
geom_smooth(method = "lm")
ames_data %>%
select(Sale_Price, Year_Built) %>%
ggplot(aes(x = Year_Built, y = Sale_Price)) +
geom_line()
ames_data %>%
select(Sale_Price, Central_Air) %>%
ggplot(aes(x = Central_Air, y = Sale_Price)) + geom_boxplot()
library(broom)
#This seems like a lot of work and might not pan out
lm(Sale_Price~., data = ames_data) %>% tidy() %>% filter(p.value <= .05)
#Can't just generate all pairwise combinations when there is a lot of features
lm(Sepal.Length~.^2, data = iris) %>% tidy() %>% summarise(adjusted_pvalue = p.adjust(p.value, method = "fdr"))
#Select the numerical features first and create a model
#Generate a model with only numerical features
numerical_features <- ames_data %>%
select(Sale_Price, where(is.numeric)) %>%
lm(Sale_Price~., data = .) %>%
tidy() %>%
filter(p.value <= .05) %>%
select(term)
#Generate a model with only categorical features
categorical_features <- ames_data %>%
select(Sale_Price, where(is.factor)) %>%
rename_if(is.factor, .funs = ~paste(., "/", sep = "")) %>%
lm(Sale_Price~., data = .) %>%
tidy() %>%
filter(p.value <= .05) %>%
select(term) %>%
mutate(new_term = str_replace_all(term, "\\/.*", "")) %>%
mutate(new_term = str_replace(new_term, "`", "")) %>%
select(new_term)
#Created data for modeling
main_effects_data <- ames_data %>%
select(Sale_Price, any_of(numerical_features$term), any_of(categorical_features$new_term))
#Renamed columns for each feature/data type
main_effects_data <- main_effects_data %>%
rename_if(is.factor, .funs = ~paste(., "_Dummy", sep = "")) %>%
rename_if(is.numeric, .funs = ~paste(., "_Numeric", sep = "")) %>%
rename("Sale_Price" = 1)
set.seed(2020)
#Create train and test splits
tidy_split <- initial_split(main_effects_data, prop = .8)
tidy_train <- training(tidy_split)
tidy_test <- testing(tidy_split)
#Create k-folds
tidy_kfolds <- vfold_cv(tidy_train)
#Create basic recipe for a main effects model/baseline
main_effects_recipe <- recipe(Sale_Price~.,
data = tidy_train) %>%
step_dummy(all_nominal()) %>%
step_center(all_predictors())
#Create the interactions
interaction_effects_recipe <- recipe(Sale_Price~.,
data = tidy_train) %>%
step_dummy(all_nominal()) %>%
step_interact(~contains("Dummy"):contains("Numeric")) %>%
step_center(all_predictors())
#That's a lot of features, we will need to do some feature elimination
interaction_effects_recipe %>% prep() %>% bake(tidy_train %>% head()) %>% colnames() %>% length()
#Create a lasso model
lasso_model <- linear_reg(penalty = tune(), mixture = 1) %>%
set_mode("regression") %>%
set_engine("glmnet")
#Define model parameters
lasso_info <- parameters(lasso_model)
#Create the workflows
#Main effects model workflow
main_wf <- workflow() %>%
add_recipe(main_effects_recipe) %>%
add_model(lasso_model)
#Interaction Effects model workflow
int_wf <- workflow() %>%
add_recipe(interaction_effects_recipe) %>%
add_model(lasso_model)
#Create the tune grid for the models
lasso_grid <- grid_regular(lasso_info, levels = 15)
#Tune models using grid search
main_res <- tune_grid(
main_wf,
resamples = tidy_kfolds,
grid = lasso_grid
)
int_res <- tune_grid(
int_wf,
resamples = tidy_kfolds,
grid = lasso_grid
)
#Extract model parameter
main_tune <- main_res %>% select_best("rmse")
int_tune <- int_res %>% select_best("rmse")
#Finalize the workflow for modeling
main_wf <- main_wf %>% finalize_workflow(main_tune)
int_wf <- int_wf %>% finalize_workflow(int_tune)
#Get test metrics
main_wf %>% last_fit(main_split) %>% collect_metrics()
#Get test metrics
main_wf %>% last_fit(tidy_split) %>% collect_metrics()
int_wf %>% last_fit(tidy_split) %>% collect_metrics()
#Create our final models
main_effects_model <- fit(main_wf, main_effects_data)
interaction_effects_model <- fit(int_wf, main_effects_data)
post_int_model <- pull_workflow_fit(interaction_effects_model)
post_int_model %>% pluck("fit") %>% coef(s = int_tune$penalty) %>% tidy()
